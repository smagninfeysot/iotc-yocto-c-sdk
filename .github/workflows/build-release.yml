name: build-release

on:
  pull_request:
  workflow_dispatch:
jobs:

#  start-self-hosted-runner:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout simplecore-tools
#        uses: actions/checkout@v4.1.1
#        with:
#          ssh-key: ${{ secrets.PRIVATE_KEY }}
#      - name: Start VM
#        timeout-minutes: 1440
#        id: start-vm
#        shell: bash
#        run: |
#          # Login Azure command line
#          az login --service-principal --username ${{ secrets.AZURE_USER_ID }} --tenant ${{ secrets.AZURE_TENANT_ID }} --password ${{ secrets.AZURE_USER_TOKEN }}
#          export AZ_BEARER=$(az account get-access-token --query accessToken -o tsv --subscription ${{ secrets.AZURE_VM_SUBSCRIPTION_ID }})
#          $GITHUB_WORKSPACE/scotty/scripts/start-vm \
#            "${{ secrets.AZURE_VM_SUBSCRIPTION_ID }}" \
#            "${{ secrets.AZURE_VM_RESSOURCE_GROUP_NAME }}" \

  build-yocto:
    runs-on: [self-hosted, build]
    needs:
      [
        build-docker-msc-sm2s-imx8plus
      ]
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: "Run yocto build"
        run: |
          ls yocto-layers -lrth
          export DNS=$(netplan status | grep "DNS Addre"| grep -v "stub" | sed -rn 's/    DNS Addresses: *(.*)/\1/p')
          chmod +x yocto-layers/.github/ci-scripts/build-yocto.sh
          docker run --privileged --dns $DNS -h docker --mount type=bind,src=${{ env.SSH_AUTH_SOCK }},dst=${{ env.SSH_AUTH_SOCK }} --env SSH_AUTH_SOCK -v `pwd`/src:/src -v `pwd`/yocto-layers/:/src/yocto-layers localhost:5000/msc-ldk-kirkstone /src/yocto-layers/.github/ci-scripts/build-yocto.sh

      - uses: hkusu/s3-upload-action@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'
          aws-bucket: ${{ secrets.AWS_BUCKET }}
          file-path: './myfile.txt'      
          
      - name: 'Upload artifacts imx-boot'
        uses: actions/upload-artifact@v4
        with:
          name: imx-boot-sm2s-imx8mp-sd-kirkstone.bin-flash_evk
          path: src/msc-ldk/build/01047/tmp/deploy/images/sm2s-imx8mp/imx-boot-sm2s-imx8mp-sd.bin-flash_evk
          retention-days: 2

      - name: 'Upload artifacts image'
        uses: actions/upload-artifact@v4
        with:
          name: core-image-minimal-sm2s-imx8mp-kirkstone.wic
          path: src/msc-ldk/build/01047/tmp/deploy/images/sm2s-imx8mp/core-image-minimal-sm2s-imx8mp.wic
          retention-days: 2

  clean:
    runs-on: self-hosted
    if: always()
    needs:
      [
        build-yocto-with-tests
      ]
    steps:
      - name: "clean build dir"
        run: |
          rm -rf docker-msc-ldk/
          rm -rf src/
          rm -rf yocto-layers/
          cd ../
          rm -rf iotc-yocto-c-sdk/

 # stop-self-hosted-runner:
 #   runs-on: ubuntu-latest
 #   needs:
 #     [
 #       start-self-hosted-runner,
 #     ]
 #   if: always()
 #   env:
 #   steps:
 #     - name: Checkout simplecore-tools
 #       uses: actions/checkout@v4.1.1
 #       with:
 #         ssh-key: ${{ secrets.PRIVATE_KEY }}
 #     - name: Stop VM composite
 #       uses: ./.github/ci-scripts/stop-self-hosted-runner

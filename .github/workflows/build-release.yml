name: build-release

on:
  pull_request:
  workflow_dispatch:
    inputs:
      test:
        description: "Build a test image and run the tests on the board"
        required: false
        default: "false"
      test-flash:
        description: "Run only flash for test purposes only"
        required: false
        default: "false"
jobs:

#  start-self-hosted-runner:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout simplecore-tools
#        uses: actions/checkout@v4.1.1
#        with:
#          ssh-key: ${{ secrets.PRIVATE_KEY }}
#      - name: Start VM
#        timeout-minutes: 1440
#        id: start-vm
#        shell: bash
#        run: |
#          # Login Azure command line
#          az login --service-principal --username ${{ secrets.AZURE_USER_ID }} --tenant ${{ secrets.AZURE_TENANT_ID }} --password ${{ secrets.AZURE_USER_TOKEN }}
#          export AZ_BEARER=$(az account get-access-token --query accessToken -o tsv --subscription ${{ secrets.AZURE_VM_SUBSCRIPTION_ID }})
#          $GITHUB_WORKSPACE/scotty/scripts/start-vm \
#            "${{ secrets.AZURE_VM_SUBSCRIPTION_ID }}" \
#            "${{ secrets.AZURE_VM_RESSOURCE_GROUP_NAME }}" \
  build-docker-msc-sm2s-imx8plus:
    if: ${{ github.event.inputs.test-flash == 'false' }}
    runs-on: [self-hosted, build]
    steps:
      - name: Checkout simplecore-tools
        uses: actions/checkout@v4.1.1
        with:
          path: 'yocto-layers'
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Prepare Docker Image
        run: |
          ssh-keyscan -p 9418 -t rsa msc-git02.msc-ge.com >> ~/.ssh/known_hosts
          git clone ssh://gitolite@msc-git02.msc-ge.com:9418/msc_ol99/docker-msc-ldk
          ssh-keyscan -t rsa bitbucket.org >> ~/.ssh/known_hosts
          cd docker-msc-ldk
          git checkout v1.11.0
          sed -i '/COPY rootfs\/home\/.ssh\/id_rsa/d' Dockerfile
          mkdir src
      - name:  Build and push to local registry
        uses: docker/build-push-action@v5
        with:
          context: docker-msc-ldk
          push: true
          tags: localhost:5000/msc-ldk-kirkstone:latest

  build-yocto:
    if: ${{ github.event.inputs.test-flash == 'false' }}
    runs-on: [self-hosted, build]
    needs:
      [
        build-docker-msc-sm2s-imx8plus
      ]
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: "Run yocto build"
        run: |
          ls yocto-layers -lrth
          export DNS=$(netplan status | grep "DNS Addre"| grep -v "stub" | sed -rn 's/    DNS Addresses: *(.*)/\1/p')
          chmod +x yocto-layers/.github/ci-scripts/build-yocto.sh
          docker run --privileged --dns $DNS -h docker --mount type=bind,src=${{ env.SSH_AUTH_SOCK }},dst=${{ env.SSH_AUTH_SOCK }} --env SSH_AUTH_SOCK -v `pwd`/src:/src -v `pwd`/yocto-layers/:/src/yocto-layers localhost:5000/msc-ldk-kirkstone /src/yocto-layers/.github/ci-scripts/build-yocto.sh
#
#      - uses: hkusu/s3-upload-action@v2
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: 'us-east-1'
#          aws-bucket: ${{ secrets.AWS_BUCKET }}
#          file-path: './myfile.txt'      
          
      - name: 'Upload artifacts imx-boot'
        uses: actions/upload-artifact@v4
        with:
          name: imx-boot-sm2s-imx8mp-sd-kirkstone.bin-flash_evk
          path: src/msc-ldk/build/01047/tmp/deploy/images/sm2s-imx8mp/imx-boot-sm2s-imx8mp-sd.bin-flash_evk
          retention-days: 2

      - name: 'Upload artifacts image'
        uses: actions/upload-artifact@v4
        with:
          name: core-image-minimal-sm2s-imx8mp-kirkstone.wic
          path: src/msc-ldk/build/01047/tmp/deploy/images/sm2s-imx8mp/core-image-minimal-sm2s-imx8mp.wic
          retention-days: 2

  test-image:
    runs-on: [self-hosted, rpi]
#    needs:
#      [
#        build-yocto-with-tests
#      ]
    steps:
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: "Download new firmware for the board"
        if: ${{ github.event.inputs.test-flash == 'false' }}
        uses: actions/download-artifact@v4
        with:
          name: imx-boot-sm2s-imx8mp-sd-kirkstone.bin-flash_evk
      - name: "Flash the board"
        run: |
          git clone git@bitbucket.org:adeneo-embedded/h0037-iotconnect-sdk-improvements-pluma.git
          cd h0037-iotconnect-sdk-improvements-pluma
          sed -i 's/ttyS0/ttyUSB0/g' conf/pluma_conf_ci.yml
          sed -i 's/ttyS0/ttyUSB0/g' conf/pluma_conf_qa.yml
          sed -i 's/ttyS0/ttyUSB0/g' boards/sm2s-imx8mp/target.yml
          sed -i 's/ttyS0/ttyUSB0/g' boards/sm2s-imx8mp/target.yml
          sed -i 's/target: 10\.91\.1\.133/target: 10.103.1.132/g' boards/sm2s-imx8mp/target.yml
          sed -i 's/TOPDIR\=\/home\/pluma\/Projects/TOPDIR=\/opt\/actions-runner\/_work\/iotc-yocto-c-sdk\/iotc-yocto-c-sdk/g' tftp-flash-device.sh
          sed -i 's/BOARDDIR_YOCTO\=\$TOPDIR\/Iot-Connect\/msc-ldk\/build\/01047/BOARDDIR_YOCTO=\$TOPDIR\/flash/g' tftp-flash-device.sh
          sed -i 's/DEPLOYDIR\=\$BOARDDIR\_YOCTO\/tmp\/deploy\/images\/\$MACHINE/DEPLOYDIR\=\$BOARDDIR\_YOCTO/g' tftp-flash-device.sh
          sed -i 's/SDIMG=msc-image-base-sdk-$MACHINE.wic.gz/SDIMG=core-image-minimal-sm2s-imx8mp.wic.gz/g' tftp-flash-device.sh
          sed -i 's/TFTP_DEVICEIP=10.91.1.138/TFTP_DEVICEIP=10.103.1.132/g' tftp-flash-device.sh
          sed -i 's/TFTP_SERVERIP=10.91.1.153/TFTP_SERVERIP=10.103.1.122/g' tftp-flash-device.sh
          sed -i 's/SSH\_TARGET\=root\@10.91.1.138/SSH\_TARGET\=root\@10.103.1.132/g' tftp-flash-device.sh
          sed -i 's/timeout: 120/timeout: 600/g' tftp-install.yml
#cd ../flash
#          gzip -v core-image-minimal-sm2s-imx8mp.wic
      - name: "TFTP Flashing"
        continue-on-error: true
        run: |
          cd h0037-iotconnect-sdk-improvements-pluma/
          ./tftp-flash-device.sh       
      - name: "Run the Pluma test suite on the board"
        run: |
          cd h0037-iotconnect-sdk-improvements-pluma/
          pluma -t /home/iotconnect/h0037-iotconnect-sdk-improvements-pluma/conf/pluma_conf_qa.yml -c /home/iotconnect/h0037-iotconnect-sdk-improvements-pluma/yml/plans/lats.yml --verbose --plugin yml/plans/scripts/

  clean:
    runs-on: self-hosted
    if: ${{ github.event.inputs.test-flash == 'false' }}
    needs:
      [
        build-yocto
      ]
    steps:
      - name: "clean build dir"
        run: |
          rm -rf docker-msc-ldk/
          rm -rf src/
          rm -rf yocto-layers/
          cd ../
          rm -rf iotc-yocto-c-sdk/

  clean-rpi:
    runs-on: [self-hosted, rpi]
    needs:
      [
        test-image
      ]
    steps:
      - name: "clean build dir"
        run: |
          rm -rf h0037-iotconnect-sdk-improvements-pluma/

 # stop-self-hosted-runner:
 #   runs-on: ubuntu-latest
 #   needs:
 #     [
 #       start-self-hosted-runner,
 #     ]
 #   if: always()
 #   env:
 #   steps:
 #     - name: Checkout simplecore-tools
 #       uses: actions/checkout@v4.1.1
 #       with:
 #         ssh-key: ${{ secrets.PRIVATE_KEY }}
 #     - name: Stop VM composite
 #       uses: ./.github/ci-scripts/stop-self-hosted-runner
